% input
theta = [-2; -1; 1; 2];
X = [ones(5,1) reshape(1:15,5,3)/10];
y = [1;0;1;0;1] >= 0.5;       % creates a logical array

% test the unregularized results
[J grad] = lrCostFunction(theta, X, y, 0)

% results
%J =  0.73482
%grad =

%   0.146561
%   0.051442
%   0.124722
%   0.198003

% test the regularized results
lambda = 3;
[J grad] = lrCostFunction(theta, X, y, lambda)

% results
%J =  2.5348
%grad =

%   0.14656
%  -0.54856
%   0.72472
%   1.39800

%input:
X = [magic(3) ; sin(1:3); cos(1:3)];
y = [1; 2; 2; 1; 3];
num_labels = 3;
lambda = 0.1;
[all_theta] = oneVsAll(X, y, num_labels, lambda)

%output:
%all_theta =
%  -0.559478   0.619220  -0.550361  -0.093502
%  -5.472920  -0.471565   1.261046   0.634767
%   0.068368  -0.375582  -1.652262  -1.410138

% input:
all_theta = [1 -6 3; -2 4 -3];
X = [1 7; 4 5; 7 8; 1 4];
predictOneVsAll(all_theta, X)
%output:
%ans =
%   1
%   2
%   2
%   1

Theta1 = reshape(sin(0 : 0.5 : 5.9), 4, 3);
Theta2 = reshape(sin(0 : 0.3 : 5.9), 4, 5);
X = reshape(sin(1:16), 8, 2);
p = predict(Theta1, Theta2, X)
% you should see this result
%a2 =

%   0.61141   0.64111   0.63762   0.60146
%   0.77531   0.82569   0.81630   0.74314
%   0.70788   0.82367   0.86060   0.83937
%   0.42994   0.63437   0.77716   0.83774
%   0.23327   0.37632   0.57523   0.73835
%   0.26820   0.34161   0.46310   0.59787
%   0.52629   0.55896   0.57703   0.57645
%   0.75353   0.79461   0.77854   0.70132

%a3 =

%   0.53036   0.54588   0.55725   0.56352
%   0.54459   0.54298   0.53754   0.52875
%   0.49979   0.49616   0.49288   0.49024
%   0.41357   0.42199   0.43736   0.45844
%   0.37321   0.40368   0.44349   0.48911
%   0.42073   0.45935   0.50210   0.54464
%   0.50962   0.53216   0.55173   0.56659
%   0.54882   0.55033   0.54738   0.54021
   
%p = 
%  4
%  1
%  1
%  4
%  4
%  4
%  4
%  2